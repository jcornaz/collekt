apply plugin: 'kotlin-platform-jvm'
apply plugin: 'java'
apply plugin: "me.champeau.gradle.jmh"

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    test {
        compileClasspath += sourceSets.jmh.runtimeClasspath
        runtimeClasspath += sourceSets.jmh.runtimeClasspath
    }
}

test.dependsOn jmhClasses

sourceSets.jmh.java {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

dependencies {
    expectedBy project(':collekt-common')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    jmh 'org.organicdesign:Paguro:3.0.18'
    jmh 'io.vavr:vavr:0.9.2'
    jmh 'org.pcollections:pcollections:2.1.3'
    jmh 'com.github.andrewoma.dexx:collection:0.7'

    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

jmh {
    fork = 1

    warmup = '1s'
    warmupIterations = 3

    iterations = 5
    timeOnIteration = '1s'

    forceGC = true

    resultFormat = 'json'

    timeUnit = 's'

    includeTests = false
}
