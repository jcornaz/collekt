//apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'kotlin-platform-js'
apply plugin: 'com.moowork.node'

dependencies {
    expectedBy project(':collekt-common')

    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile 'org.webjars.npm:immutable:4.0.0-rc.9'

    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

//compileKotlin2Js {
//    kotlinOptions.metaInfo = true
//    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
//    kotlinOptions.sourceMap = false
//    kotlinOptions.main = "call"
//}
//
//kotlinFrontend {
////    downloadNodeJsVersion = 'latest'
//
//    npm {
//        dependency("immutable", "4.0.0-rc.9")
//
//        devDependency "karma"
//    }
//
//    webpackBundle {
//        bundleName = "main"
//    }
//}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions.moduleKind = "commonjs"
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    download = true
}

task installQunit(type: NpmTask) {
    args = ['install', 'qunitjs']
}

task installImmutable(type: NpmTask) {
    args = ['install', 'immutable']
}

task runQunit(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installImmutable, installQunit]) {
    script = file('node_modules/qunitjs/bin/qunit')
    args = [projectDir.toPath().relativize(file(compileTestKotlin2Js.outputFile).toPath())]
}

test.dependsOn runQunit
